/* 
* Health Plan Calculator 1.0.0
* Copyright (c) 2013, Michael Eisenbraun
* Last Updated: 2013-11-03
*/if(!window.console)var console={log:function(){}};var hpc={dependent_limit:10,costs:{physician:95,specialist:179,xray:271,urgent:184,outpatient:3364,hospitalization:15070,er:1139,maternity_normal:8e3,maternity_csection:11160,other:0,rx_generic:13,rx_formulary:35,rx_nonformulary:60},plans:[{description:"Medical $750/$1500 Deductible",premiums:{employee:60,employee_plus_one:117,employee_plus_family:176},deductibles:{employee:750,employee_plus_one:1500,employee_plus_family:1500},coinsurance:{employee:.15,employee_plus_one:.15,employee_plus_family:.15},maxcoinsurance:{employee:2500,employee_plus_one:5e3,employee_plus_family:5e3},copay:{er:60,hospitalization:120,maternity:120},rx_deductibles:{employee:50,employee_plus_one:50,employee_plus_family:50},fsa_limit:{employee:2500,employee_plus_one:2500,employee_plus_family:2500},comparisons:{deductible:0,copay:0,coinsurance:0,rx_deductible:0,rx_copay:0,total:0,fsa:0}},{description:"Medical $1250/$2500 Deductible",premiums:{employee:29,employee_plus_one:63,employee_plus_family:103},deductibles:{employee:1250,employee_plus_one:2500,employee_plus_family:2500},coinsurance:{employee:.15,employee_plus_one:.15,employee_plus_family:.15},maxcoinsurance:{employee:2500,employee_plus_one:5e3,employee_plus_family:5e3},copay:{er:60,hospitalization:120,maternity:120},rx_deductibles:{employee:50,employee_plus_one:50,employee_plus_family:50},fsa_limit:{employee:2500,employee_plus_one:2500,employee_plus_family:2500},comparisons:{deductible:0,copay:0,coinsurance:0,rx_deductible:0,rx_copay:0,total:0,fsa:0}}],coveragelevel:null,effectivedate:null,effectivemonth:0,Policyholder:function(e){this.name=e?e:"Dependent";this.qty={physician:0,specialist:0,xray:0,urgent:0,outpatient:0,hospitalization:0,er:0,maternity:0,other:0,rx_generic:0,rx_formulary:0,rx_nonformulary:0};this.total={physician:0,specialist:0,xray:0,urgent:0,outpatient:0,hospitalization:0,er:0,maternity_normal:0,maternity_csection:0,other:0,med_total:0,rx_generic:0,rx_formulary:0,rx_nonformulary:0,rx_total:0};this.plan=[{deductible:0,coinsurance:0,copay:0,rx_deductible:0,rx_copay:0},{deductible:0,coinsurance:0,copay:0,rx_deductible:0,rx_copay:0}]},policyholders:{employee:null,dependents:0,limit:10},strToNum:function(e){return Number(e.replace(/(\$|,|[A-z])*/g,""))},addCommas:function(e){e+="";x=e.split(".");x1=x[0];x2=x.length>1?"."+x[1]:"";var t=/(\d+)(\d{3})/;while(t.test(x1))x1=x1.replace(t,"$1,$2");return x1+x2},numToDollar:function(e,t){t=t?t:0;return"$"+this.addCommas(e.toFixed(t))},getCoverageLevel:function(){var e=this;if(e.coveragelevel)switch(e.coveragelevel){case"employee":return"Employee";case"employee_plus_one":return"Employee + One";case"employee_plus_family":return"Employee + Family"}return!1},setTotalExpenses:function(e){var t=this,n=0,r=0;$.each(t.policyholders[e].total,function(e,t){e.indexOf("total")==-1&&(e.indexOf("rx_")==-1?n+=t:r+=t)});t.policyholders[e].total.med_total=n;t.policyholders[e].total.rx_total=r},getPremiumExpense:function(e){var t=this,n=new Date(t.effectivedate);t.effectivemonth=n.getMonth();return(12-t.effectivemonth)*2*e.premiums[t.coveragelevel]},getDeductible:function(e,t){var n=this,r=n.plans[t],i=n.policyholders[e].total.med_total,s=r.deductibles[n.coveragelevel]-r.comparisons.deductible,o=r.deductibles.employee;s>0&&(s>o?n.policyholders[e].plan[t].deductible=i>o?o:i:n.policyholders[e].plan[t].deductible=s<i?s:i);n.policyholders[e].total.med_total-=n.policyholders[e].plan[t].deductible;r.comparisons.deductible+=n.policyholders[e].plan[t].deductible},getCoinsurance:function(e,t){var n=this,r=n.plans[t],i=n.policyholders[e].total.med_total,s=i*r.coinsurance[n.coveragelevel],o=r.maxcoinsurance[n.coveragelevel]-r.comparisons.coinsurance,u=r.maxcoinsurance.employee;o>0&&(o<s?n.policyholders[e].plan[t].coinsurance=o:n.policyholders[e].plan[t].coinsurance=s>u?u:s);r.comparisons.coinsurance+=n.policyholders[e].plan[t].coinsurance},getCopay:function(e,t){var n=this,r=0,i=n.plans[t];r=n.policyholders[e].qty.er*i.copay.er+n.policyholders[e].qty.hospitalization*i.copay.hospitalization;n.policyholders[e].qty.maternity&&(r+=i.copay.maternity);n.policyholders[e].plan[t].copay=r;n.policyholders[e].total.med_total=n.policyholders[e].total.med_total-r;i.comparisons.copay+=r},getRxExpenses:function(e,t){var n=this,r=0,i=n.plans[t];r=n.policyholders[e].total.rx_total*(12-n.effectivemonth);if(r>i.rx_deductibles.employee){n.policyholders[e].plan[t].rx_deductible=i.rx_deductibles.employee;n.policyholders[e].plan[t].rx_copay=r-i.rx_deductibles.employee}else n.policyholders[e].plan[t].rx_deductible=r;i.comparisons.rx_deductible+=n.policyholders[e].plan[t].rx_deductible;i.comparisons.rx_copay+=n.policyholders[e].plan[t].rx_copay},getComparison:function(){var e=this,t="",n=[],r=0,i=0,s=null,o=0;$.each(e.plans,function(n,r){r.comparisons.deductible=0;r.comparisons.coinsurance=0;r.comparisons.copay=0;r.comparisons.rx_deductible=0;r.comparisons.rx_copay=0;i=0;for(var u=0;u<=e.policyholders.dependents;u++){u===0?s="employee":s="dependent"+u;e.setTotalExpenses(s);e.policyholders[s].plan[n].deductible=0;e.policyholders[s].plan[n].coinsurance=0;e.policyholders[s].plan[n].copay=0;e.getCopay(s,n);e.getDeductible(s,n);e.getCoinsurance(s,n);e.getRxExpenses(s,n)}o=e.getPremiumExpense(r);r.comparisons.total=r.comparisons.deductible+r.comparisons.copay+r.comparisons.coinsurance+r.comparisons.rx_deductible+r.comparisons.rx_copay+o;r.comparisons.fsa=r.comparisons.deductible+r.comparisons.copay+r.comparisons.coinsurance+r.comparisons.rx_deductible+r.comparisons.rx_copay;r.comparisons.fsa=r.comparisons.fsa>r.fsa_limit[e.coveragelevel]?r.fsa_limit[e.coveragelevel]:r.comparisons.fsa;t+="<tr><td>"+r.description+"</td>";t+="<td>"+e.numToDollar(r.premiums[e.coveragelevel],2)+"</td>";t+="<td>"+e.numToDollar(r.comparisons.deductible,2)+"</td>";t+="<td>"+e.numToDollar(r.comparisons.copay,2)+"</td>";t+="<td>"+e.numToDollar(r.comparisons.coinsurance,2)+"</td>";t+="<td>"+e.numToDollar(r.comparisons.rx_deductible,2)+"</td>";t+="<td>"+e.numToDollar(r.comparisons.rx_copay,2)+"</td>";t+="<td><strong>"+e.numToDollar(r.comparisons.total,2)+"</strong></td>";t+="<td>"+e.numToDollar(r.comparisons.fsa,2)+"</td>";t+="</tr>"});$("tbody",e.el.comparisons).html(t)},loadForm:function(){var e=this,t=this.el.policyholder.val();if(e.coveragelevel&&e.effectivedate){e.el.demographics.slideUp();e.el.summary.html("<p>Coverage Level: <strong>"+e.getCoverageLevel()+"</strong>&nbsp;&nbsp;Effective Date: <strong>"+e.effectivedate+'</strong>&nbsp;&nbsp;<a href="#" class="edit">edit</a></p>').fadeIn("slow");e.el.policyholders.css("visibility","visible");e.el.expenses.css("visibility","hidden");$.each(e.policyholders[t].qty,function(t,n){if(t=="maternity"){e.el.maternityselect.val(n);$(".total .green",e.el[t]).html(e.numToDollar(n))}else{$("input",e.el[t]).val(n);$(".total .green",e.el[t]).html(e.numToDollar(n*e.costs[t]))}});$(".total .green",e.el.med_total).html(e.numToDollar(e.policyholders[t].total.med_total));$(".total .green",e.el.rx_total).html(e.numToDollar(e.policyholders[t].total.rx_total));setTimeout("hpc.el.expenses.css('visibility', 'visible')",100);e.el.comparisons.animate({height:"150px"});e.el.banner.fadeOut()}},reset:function(){var e=this;e.el.dialog_warning.html("<p>You are about to reset the form. All your data will be deleted.</p> <p>Do you wish to continue?<p>");e.el.dialog_warning.dialog({dialogClass:"no-close",autoOpen:!0,modal:!1,buttons:{Continue:function(){window.location.reload();e.el.dialog_warning.dialog("close")},Cancel:function(){e.el.dialog_warning.dialog("close")}}})},switchTabs:function(e){var t=this,n=e.attr("data-policyholder"),r=e.text();t.el.policyholders.children().removeClass("active");if(n=="add"){t.policyholders.dependents++;t.el.policyholder_name.val("Dependent Name");t.el.dialog_policyholder.dialog("open")}else{e.addClass("active");$("h3 span").html(r);t.el.policyholder.val(n);t.loadForm()}},setPolicyholders:function(){var e=this,t=e.el.coveragelevel.val(),n=0,r=e.policyholders.limit;if(t){switch(t){case"employee":n=0;break;case"employee_plus_one":n=1;break;case"employee_plus_family":n=e.dependent_limit}if(n>e.policyholders.dependents)if(e.el.add)e.el.add.show();else{e.el.policyholders.append('<li id="add" data-policyholder="add">+</li>');e.el.add=$("#add")}else{if(e.policyholders.dependents>n){e.el.dialog_warning.html("<p>You have too many dependents for the plan selected. All extra dependents will be deleted.</p> <p>Do you wish to continue?<p>");e.el.dialog_warning.dialog({dialogClass:"no-close",autoOpen:!0,modal:!1,buttons:{Continue:function(){while(e.policyholders.dependents>n){delete e.policyholders["dependent"+e.policyholders.dependents];$("#dependent"+e.policyholders.dependents).remove();e.policyholders.dependents--}e.el.add&&e.el.add.hide();e.policyholders.limit=n;e.coveragelevel=t;e.switchTabs($("#employee"));e.loadForm();e.el.dialog_warning.dialog("close")},Cancel:function(){e.policyholders.limit=r;e.coveragelevel=e.prevCoveragelevel;e.switchTabs($("#employee"));e.el.dialog_warning.dialog("close")}}});return!1}e.el.add&&e.el.add.hide()}e.policyholders.limit=n;e.coveragelevel=e.prevCoveragelevel=t;e.policyholders.employee?e.loadForm():e.el.dialog_policyholder.dialog("open")}return!1},addPolicyholder:function(){var e=this,t=e.el.policyholder_name.val();if(e.policyholders.employee){e.policyholders["dependent"+e.policyholders.dependents]=new e.Policyholder(t);e.el.add.before('<li id="dependent'+e.policyholders.dependents+'" data-policyholder="dependent'+e.policyholders.dependents+'" class="active">'+e.policyholders["dependent"+e.policyholders.dependents].name+"</li>");$("h3 span").html(e.policyholders["dependent"+e.policyholders.dependents].name);e.el.policyholder.val("dependent"+e.policyholders.dependents)}else{e.policyholders.employee=new e.Policyholder(t);e.el.policyholders.prepend('<li id="employee" data-policyholder="employee" class="active">'+e.policyholders.employee.name+"</li>");$("h3 span").html(e.policyholders.employee.name);e.el.policyholder.val("employee")}e.policyholders.dependents==e.policyholders.limit&&e.el.add&&e.el.add.hide();e.loadForm();e.el.dialog_policyholder.dialog("close")},init:function(){var e=this;e.el={banner:$("#banner"),start:$("#start"),form:$("#hpc"),demographics:$("#demographics"),summary:$("#summary"),next:$("#next"),reset:$("#reset"),coveragelevel:$("#coveragelevel"),effectivedate:$("#effectivedate"),policyholders:$("#policyholders"),policyholder:$("#policyholder"),add:null,comparisons:$("#comparisons"),expenses:$("#expenses"),physician:$("#physician"),specialist:$("#specialist"),xray:$("#xray"),urgent:$("#urgent"),outpatient:$("#outpatient"),hospitalization:$("#hospitalization"),er:$("#er"),maternity:$("#maternity"),maternityselect:$("#maternity-select"),other:$("#other"),med_total:$("#med_total"),rx_generic:$("#rx_generic"),rx_formulary:$("#rx_formulary"),rx_nonformulary:$("#rx_nonformulary"),rx_total:$("#rx_total"),dialog_policyholder:$("#dialog_policyholder"),policyholder_name:$("#policyholder_name"),dialog_warning:$("#dialog_warning")};$.each(e.costs,function(t,n){t.indexOf("maternity")==-1?$(".cost",e.el[t]).html(e.numToDollar(n)):e.el.maternityselect.html('<option value="0">-- none --</option><option value="'+e.costs.maternity_normal+'">Normal Birth - Includes Hospital ('+e.numToDollar(e.costs.maternity_normal)+')</option><option value="'+e.costs.maternity_csection+'">C-Section - Includes Hospital ('+e.numToDollar(e.costs.maternity_csection)+")</option>")});e.el.next.on("click",function(t){t.preventDefault();e.setPolicyholders()});e.el.reset.on("click",function(t){t.preventDefault();e.reset()});e.el.summary.on("click",".edit",function(t){t.preventDefault();e.el.demographics.slideDown();e.el.summary.hide()});e.el.policyholders.on("click","li, li a",function(t){t.preventDefault();e.switchTabs($(this))});e.el.dialog_policyholder.dialog({dialogClass:"no-close",autoOpen:!1,modal:!1,buttons:{Add:function(){e.addPolicyholder()}},close:function(){}});e.el.form.on("blur change",":input",function(){var t=$(this),n=t.data("type"),r=t.val(),i=e.el.policyholder.val();switch(n){case"maternity":if(isNaN(r)||r==null){e.policyholders[i].qty[n]=parseInt(0);e.policyholders[i].total[n]=parseInt(0);$(".total .green",e.el[n]).html(e.numToDollar(0))}else{e.policyholders[i].qty[n]=parseInt(r);e.policyholders[i].total[n]=parseInt(r);$(".total .green",e.el[n]).html(e.numToDollar(e.policyholders[i].total[n]))}break;case"coveragelevel":break;case"effectivedate":e.effectivedate=r;break;case"other":e.policyholders[i].qty[n]=e.strToNum(r);e.policyholders[i].total[n]=e.strToNum(r);$(".total .green",e.el[n]).html(e.numToDollar(e.policyholders[i].total[n]));break;default:if(r.length>0){r=parseInt(r);if(isNaN(r)||r<0)t.parent().addClass("ui-state-invalid");else{t.parent().removeClass("ui-state-invalid");e.policyholders[i].qty[n]=r;e.policyholders[i].total[n]=e.costs[n]*r;$(".total .green",e.el[n]).html(e.numToDollar(e.policyholders[i].total[n]))}}else{t.parent().removeClass("ui-state-invalid");t.val(0)}}if(e.effectivedate&&e.coveragelevel&&e.policyholders.employee){e.setTotalExpenses(i);$(".total .green",e.el.med_total).html(e.numToDollar(e.policyholders[i].total.med_total));$(".total .green",e.el.rx_total).html(e.numToDollar(e.policyholders[i].total.rx_total));e.getComparison()}});e.el.form.on("focus",":input",function(){var t=$(this),n=t.val(),r=t.data("type");r=="effectivedate"||r=="coveragelevel"?e[r]=null:n==0&&t.val("")});e.el.effectivedate.datepicker();$("body").tooltip({position:{my:"left-70 bottom-15",at:"left top",collision:"fit"}})}};$(document).ready(function(){hpc.init()});